// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManager.Models;

namespace TaskManager.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210110183531_AddEpicItem5")]
    partial class AddEpicItem5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("TaskManager.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<long?>("TaskItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("commentText")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("TaskManager.Models.EpicItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EpicItems");
                });

            modelBuilder.Entity("TaskManager.Models.TaskItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<long>("EpicItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("assignee")
                        .HasColumnType("text");

                    b.Property<string>("longDescription")
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TaskItems");
                });

            modelBuilder.Entity("TaskManager.Models.Comment", b =>
                {
                    b.HasOne("TaskManager.Models.TaskItem", null)
                        .WithMany("comments")
                        .HasForeignKey("TaskItemId");
                });

            modelBuilder.Entity("TaskManager.Models.TaskItem", b =>
                {
                    b.Navigation("comments");
                });
#pragma warning restore 612, 618
        }
    }
}
